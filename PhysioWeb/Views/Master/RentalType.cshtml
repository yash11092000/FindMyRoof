@model PhysioWeb.Models.RentalTypeMaster
@{
	ViewBag.Title = "Rental Type";
}

<div class="container mt-4">
	<div class="d-flex justify-content-between align-items-center mb-3">
		<h4 class="mb-0">Rental Types</h4>
		<button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addRentalModal">
			<i class="bi bi-plus-circle"></i> Add Rental Type
		</button>
	</div>

	<div class="card shadow-sm border-0">
		<div class="card-header bg-success text-white">
			<h5 class="mb-0"><i class="bi bi-building"></i> All Rental Types</h5>
		</div>
		<div class="card-body">
			<div class="table-responsive">
				<table id="TableList" class="table table-hover align-middle">
					<thead class="table-light">
						<tr>
							<th>Rental Type</th>
							<th>Description</th>
							<th>InActive</th>
							<th>Created By</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<!-- ✅ Add/Edit Rental Modal -->
<div class="modal fade" id="addRentalModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header bg-success text-white">
				<h5 class="modal-title">Add New Rental Type</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<form id="RentalTypeForm">
					<input type="hidden" id="UniquId" name="UniquId" />
					<div class="mb-3">
						<label class="form-label fw-bold">Rental Type<span class="impMark">*</span></label>
						<input type="text" class="form-control" id="RentalType" name="RentalType" placeholder="Enter rental type" required />
					</div>
					<div class="mb-3">
						<label class="form-label fw-bold">Description</label>
						<input type="text" class="form-control" id="Description" name="Description" placeholder="Enter description" required />
					</div>
					<div class="form-check mb-3">
						<input class="form-check-input" type="checkbox" id="IsActive" name="IsActive" />
						<label class="form-check-label fw-bold" for="IsActive">Is Active</label>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
					<i class="bi bi-x-circle"></i> Cancel
				</button>
				<button type="button" class="btn btn-success" id="btnSave">
					<i class="bi bi-save"></i> Save
				</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
 
    <script>
        $(document).ready(function () {

			// ✅ Clone header for search inputs
			$('#AgencyTable thead tr').clone(true).appendTo('#AgencyTable thead');

			$('#AgencyTable thead tr:eq(1) th').each(function (i) {
				if ($(this).find('i').length === 0) { // ✅ only add input if no icon
					var title = $('#AgencyTable thead tr:eq(0) th').eq(i).text().trim();
					$(this).html('<input class="form-control form-control-sm" type="text" placeholder="Search ' + title + '" />');
				} else {
					$(this).html('');
				}
			});

			// ✅ Initialize DataTable
			var TableList = $("#AgencyTable").DataTable({
				orderCellsTop: true,
				processing: true,
				serverSide: true,
				order: [[0, "asc"]],
				ajax: {
					url: '/Agency/ListAgencies', // ✅ Controller endpoint
					type: 'POST'
				},
				columns: [
					{ data: 'agencyName' },
					{ data: 'cityName' },
					{ data: 'statusText' },
					{ data: 'createdBy' },
					{
						data: null,
						render: function (data, type, row) {
							let para = `'${row.uniquId}', 'Agency', 'EditAgency'`;
							return `<a href="javascript:void(0)" onclick="EditAgency(${para})">
										<i class="bi bi-pencil-square text-primary fs-5" title="Edit"></i>
									</a>`;
						},
						orderable: false,
						searchable: false
					},
					{
						data: null,
						render: function (data, type, row) {
							let para = `'${row.uniquId}', 'Agency', 'DeleteAgency'`;
							return `<a href="javascript:void(0)" onclick="DeleteAgency(${para})">
										<i class="bi bi-trash text-danger fs-5" title="Delete"></i>
									</a>`;
						},
						orderable: false,
						searchable: false
					}
				],
				initComplete: function () {
					var table = this.api();

					// ✅ Column search functionality
					$('#AgencyTable thead tr:eq(1) th').each(function (i) {
						$('input', this).on('keyup change', function () {
							if (table.column(i).search() !== this.value) {
								table
									.column(i)
									.search(this.value)
									.draw();
							}
						});
					});
				}
			});

		});



		$("#btnSave").on("click", function () {
			var RentalType = $("#RentalType");
			if (RentalType.val() === "") {
				RentalType.focus();
				notyf.error("Please Enter Rental Type");
			} else {
				$.ajax({
					url: '/Master/SaveRentalType',
					method: 'POST',
					data: $("#RentalTypeForm").serialize(),
					success: function (response) {
						if (response) {
							notyf.success("Rental Type Added Successfully");
							$("#addRentalModal").modal('hide');
							$("#RentalTypeForm")[0].reset();
							ClearData();
							$("#TableList").DataTable().ajax.reload(null, false);
						} else {
							notyf.error(response.message || "Failed to save.");
						}
					},
					error: function () {
						notyf.error("Some Error Occurred While Saving");
					}
				});
			}
		});

           function OnSuccessOfEdit(data){
                    $("#addRentalModal").modal('show');
                    $("#UniquId").val(data.uniquId);
                    $("#RentalType").val(data.rentalType);
                    $("#Description").val(data.description);
                    $("#IsActive").val(data.isActive);
           }

		  $('.btn-cancel').on('click', function () {
		  $("#RentalTypeForm")[0].reset();
		  ClearData();
		});

		function ClearData(){
			 $("#UniquId").val("");
			 $("#RentalType").val("");
			 $("#Description").val("");
			 $("#IsActive").val("");
		}

         function OnSuccessOfDelete(){
            notyf.success("Rental Type Deleted");
        }
    </script>
}
